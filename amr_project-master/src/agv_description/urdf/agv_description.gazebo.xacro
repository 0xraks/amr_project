<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="agv">

    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <legacyMode>false</legacyMode>
            <alwaysOn>true</alwaysOn>
            <publishWheelTF>true</publishWheelTF>
            <publishTf>1</publishTf>
            <publishWheelJointState>true</publishWheelJointState>
            <updateRate>1</updateRate>
            <leftJoint>right_wheel_joint</leftJoint>
            <rightJoint>left_wheel_joint</rightJoint>
            <wheelSeparation>0.2</wheelSeparation>
            <wheelDiameter>0.127</wheelDiameter>
            <wheelAcceleration>0.2</wheelAcceleration>
            <wheelTorque>5</wheelTorque>
            <torque>5</torque>
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
	    <odometrySource></odometrySource>
	    <publishOdomTF>True</publishOdomTF>
            <robotBaseFrame>base_link</robotBaseFrame>
        </plugin>
    </gazebo>

    <gazebo reference="right_wheel">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    </gazebo>

    <gazebo reference="left_wheel">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    </gazebo>

    <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
    <mu1>0.3</mu1>
    <mu2>0.3</mu2>
    <sensor type="contact" name="bumpers">
        <always_on>1</always_on>
        <update_rate>50.0</update_rate>
        <visualize>true</visualize>
        <contact>
            <collision>base_link</collision>
        </contact>
    </sensor>
    </gazebo>
 
<!-- hokuyo -->
  <gazebo reference="laser">
    <sensor type="gpu_ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo>


<!--
License: Apache 2.0. See LICENSE file in root directory.
Copyright(c) 2017 PAL Robotics, S.L. All Rights Reserved

This is the Gazebo URDF model for the Intel RealSense D435 camera
-->  
  <xacro:macro name="gazebo_d435" params="camera_name reference_link topics_ns depth_optical_frame color_optical_frame infrared1_optical_frame infrared2_optical_frame publish_pointcloud:=true" >

    <!-- Load parameters to model's main link-->
    <xacro:property name="deg_to_rad" value="0.01745329251994329577" />
    <gazebo reference="${reference_link}">
      <self_collide>0</self_collide>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
      <gravity>1</gravity>
      <!--<mu>1</mu>-->
      <mu2>1</mu2>
      <fdir1>0 0 0</fdir1>
      <!--<slip1>0</slip1>
      <slip2>0</slip2>-->
      <kp>1e+13</kp>
      <kd>1</kd>
      <!--<max_vel>0.01</max_vel>
      <min_depth>0</min_depth>-->
      <sensor name="${camera_name}color" type="camera">
        <camera name="${camera_name}">
          <horizontal_fov>${69.4*deg_to_rad}</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>RGB_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>1</visualize>
      </sensor>
      <sensor name="${camera_name}ired1" type="camera">
        <camera name="${camera_name}">
          <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
            <format>L_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.05</stddev>
          </noise>
        </camera>
        <always_on>1</always_on>
        <update_rate>90</update_rate>
        <visualize>0</visualize>
      </sensor>
      <sensor name="${camera_name}ired2" type="camera">
        <camera name="${camera_name}">
          <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
            <format>L_INT8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.05</stddev>
          </noise>
        </camera>
        <always_on>1</always_on>
        <update_rate>90</update_rate>
        <visualize>0</visualize>
      </sensor>
      <sensor name="${camera_name}depth" type="depth">
        <camera name="${camera_name}">
          <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.100</stddev>
          </noise>
        </camera>
        <always_on>1</always_on>
        <update_rate>90</update_rate>
        <visualize>0</visualize>
      </sensor>
    </gazebo>

    <gazebo>
      <plugin name="${topics_ns}" filename="librealsense_gazebo_plugin.so">
        <prefix>${camera_name}</prefix>
        <depthUpdateRate>60.0</depthUpdateRate>
        <colorUpdateRate>60.0</colorUpdateRate>
        <infraredUpdateRate>60.0</infraredUpdateRate>
        <depthTopicName>depth/color/image_raw</depthTopicName>
        <depthCameraInfoTopicName>depth/color/camera_info</depthCameraInfoTopicName>
        <colorTopicName>color/image_raw</colorTopicName>
        <colorCameraInfoTopicName>color/camera_info</colorCameraInfoTopicName>
        <infrared1TopicName>infra1/image_raw</infrared1TopicName>
        <infrared1CameraInfoTopicName>infra1/camera_info</infrared1CameraInfoTopicName>
        <infrared2TopicName>infra2/image_raw</infrared2TopicName>
        <infrared2CameraInfoTopicName>infra2/camera_info</infrared2CameraInfoTopicName>
        <colorOpticalframeName>${color_optical_frame}</colorOpticalframeName>
        <depthOpticalframeName>${depth_optical_frame}</depthOpticalframeName>
        <infrared1OpticalframeName>${infrared1_optical_frame}</infrared1OpticalframeName>
        <infrared2OpticalframeName>${infrared2_optical_frame}</infrared2OpticalframeName>
        <rangeMinDepth>0.2</rangeMinDepth>
        <rangeMaxDepth>10.0</rangeMaxDepth>
        <pointCloud>${publish_pointcloud}</pointCloud>
        <pointCloudTopicName>depth/color/points</pointCloudTopicName>
        <pointCloudCutoff>0.25</pointCloudCutoff>
        <pointCloudCutoffMax>9.0</pointCloudCutoffMax>
      </plugin>
    </gazebo>

   <gazebo reference="caster_front_right_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>

    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>

    <material>Gazebo/Chrome</material>
  </gazebo>

   <gazebo reference="caster_front_left_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>

    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>

    <material>Gazebo/Chrome</material>
  </gazebo>

   <gazebo reference="caster_back_right_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>

    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>

    <material>Gazebo/Chrome</material>
  </gazebo>

   <gazebo reference="caster_back_left_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>

    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>

    <material>Gazebo/Chrome</material>
  </gazebo>
  </xacro:macro>

   <xacro:macro name="gazebo_t265" params="camera_name fisheye1_reference_link fisheye2_reference_link topics_ns fisheye1_optical_frame fisheye2_optical_frame" >

    <!-- Load parameters to model's main link-->
    <gazebo reference="${fisheye1_reference_link}">
      <self_collide>0</self_collide>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
      <gravity>1</gravity>
      <!--<mu>1</mu>-->
      <mu2>1</mu2>
      <fdir1>0 0 0</fdir1>
      <!--<slip1>0</slip1>
      <slip2>0</slip2>-->
      <kp>1e+13</kp>
      <kd>1</kd>
      <!--<max_vel>0.01</max_vel>
      <min_depth>0</min_depth>-->
      <sensor name="${camera_name}fisheye1" type="wideanglecamera">
        <origin xyz="0 0 0" rpy="0 ${M_PI/2} 0" />
        <update_rate>30</update_rate>
        <camera>
          <horizontal_fov>1.95</horizontal_fov>
          <image>
            <width>848</width>
            <height>800</height>
          </image>
          <clip>
            <near>0.2</near>
            <far>100</far>
          </clip>
         <lens>
            <!-- type element is mandatory -->
            <type>orthographic</type>
            <!-- if it is set to `true` your horizontal FOV will remain as defined -->
            <!-- othervise it depends on lens type and custom function, if there is one -->
            <scale_to_hfov>true</scale_to_hfov>
            <!-- clip everything that is outside of this angle -->
            <!-- eye balled value for these cameras-->
            <cutoff_angle>2.20</cutoff_angle>
            <!-- resolution of the cubemap texture, the highter it is - the sharper is your image -->
            <env_texture_size>1024</env_texture_size>
          </lens>
          <!--<distortion>-->
            <!--<k1>-0.00040996368625201285</k1>-->
            <!--<k2>0.03653175011277199</k2>-->
            <!--<k3>0.0</k3>-->
            <!--<p1>-0.034823670983314514</p1>-->
            <!--<p2>0.0052825710736215115</p2>-->
            <!--<center>0.5 0.5</center>-->
          <!--</distortion>-->
        </camera>
        <plugin name="${camera_name}fisheye1" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>30.0</updateRate>
          <cameraName>${topics_ns}/fisheye1</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${fisheye1_optical_frame}</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>-0.00040996368625201285</distortionK1>
          <distortionK2>0.03653175011277199</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionP1>-0.034823670983314514</distortionP1>
          <distortionP2>0.0052825710736215115</distortionP2>
          <Cx>416.22</Cx>
          <Cy>402.1</Cy>
          <CxPrime>416.22</CxPrime>
        </plugin>
      </sensor>
    </gazebo>
    <gazebo reference="${fisheye2_reference_link}">
      <self_collide>0</self_collide>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
      <gravity>1</gravity>
      <!--<mu>1</mu>-->
      <mu2>1</mu2>
      <fdir1>0 0 0</fdir1>
      <!--<slip1>0</slip1>
      <slip2>0</slip2>-->
      <kp>1e+13</kp>
      <kd>1</kd>
      <!--<max_vel>0.01</max_vel>
      <min_depth>0</min_depth>-->
      <sensor name="${camera_name}fisheye2" type="wideanglecamera">
        <origin xyz="0 0 0" rpy="0 ${M_PI/2} 0" />
        <update_rate>30</update_rate>
        <camera>
          <horizontal_fov>2.84</horizontal_fov>
          <image>
            <width>848</width>
            <height>800</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
         <lens>
            <!-- type element is mandatory -->
            <type>orthographic</type>
            <!-- if it is set to `true` your horizontal FOV will remain as defined -->
            <!-- othervise it depends on lens type and custom function, if there is one -->
            <scale_to_hfov>true</scale_to_hfov>
            <!-- clip everything that is outside of this angle -->
            <!-- eye balled value for these cameras-->
            <cutoff_angle>2.20</cutoff_angle>
            <!-- resolution of the cubemap texture, the highter it is - the sharper is your image -->
            <env_texture_size>1024</env_texture_size>
          </lens>
          <!--<distortion>-->
            <!--<k1>-0.00040996368625201285</k1>-->
            <!--<k2>0.03653175011277199</k2>-->
            <!--<k3>0.0</k3>-->
            <!--<p1>-0.034823670983314514</p1>-->
            <!--<p2>0.0052825710736215115</p2>-->
            <!--<center>0.5 0.5</center>-->
          <!--</distortion>-->
        </camera>
        <always_on>1</always_on>
        <plugin name="${camera_name}fisheye2" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>30.0</updateRate>
          <cameraName>${topics_ns}/fisheye2</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${fisheye2_optical_frame}</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>-0.00040996368625201285</distortionK1>
          <distortionK2>0.03653175011277199</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionP1>-0.034823670983314514</distortionP1>
          <distortionP2>0.0052825710736215115</distortionP2>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

</robot>
